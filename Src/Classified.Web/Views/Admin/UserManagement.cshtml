@using Microsoft.AspNet.Identity
@model Classified.Domain.ViewModels.AccountViewModels.AdminUserManagmetViewModel

@{
    ViewBag.Title = "UserManagment";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="form-panel">
    @*
        Create a Form for sending informaiton to further processing
    *@

    @using (Html.BeginForm("UserManagement", "Admin", FormMethod.Post, new { @class = "form-inline" }))
    {
        <div class="form-group">
            @Html.LabelFor(m => m.RoleName, new { @class = "control-label" })
        </div>
        <div class="form-group">
            @Html.Label("", "", new { @class = "sr-only" })
            @Html.DropDownListFor(m => m.RoleName, new SelectList(Model.Roles, "Name", "Name"), null, new { @class = "form-control" })
        </div>
        <button type="submit" class="btn btn-theme">Select</button>
    }
</div>
<div class="showback">

    @Html.RouteLink("Register New User", "InsertAdminUser", null, new { @class = "btn btn-success" })

    <hr />

    @if (!Model.Users.Any())
    {
        <div class="alert alert-warning">
            There is no user to manage. Please either register a new user or change the role of an existing user to the selected role type!!!
        </div>
    }
    else
    {

        <table class="table table-striped table-advance table-hover" id="usersTable">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Email Address</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.Users)
                {
                    <tr>
                        <td>@user.FirstName</td>
                        <td>@user.LastName</td>
                        <td>@user.Email</td>
                        <td>
                            @if (HttpContext.Current.User.Identity.GetUserName() != user.Email)
                            {
                                @Html.ActionLink("Change Password", "ResetUserPassword", "Admin", new { email = user.Email }, new { @class = "btn btn-success btn-xs" })
                                <a title="Edit" class="btn btn-primary btn-xs" href="@Url.RouteUrl("UpdateAdminUser", new {email = user.Email})"><i class="fas fa-edit"></i></a>
                                <button title="Delete" class="btn btn-danger btn-xs js-delete" data-user-email="@user.Email"><i class="fas fa-trash-alt"></i></button>
                            }
                            else
                            {
                                @Html.Raw("Current user information cannot be modified form here.")
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {

            var table = $("#usersTable").DataTable();
            //Read the Delete button from the table
            $("#usersTable").on("click",
                ".js-delete",
                function () {
                    //Call Api
                    var button = $(this);
                    bootbox.confirm("Are you sure you want to delete this User. The process is irreversible!!",
                        function (result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/admin/deleteUser/?email=" + button.attr("data-user-email"),
                                    type: "DELETE",
                                    statusCode:
                                    {
                                        200: function (data) {
                                            //sucessfull
                                            table.row(button.parents("tr")).remove().draw();
                                            bootbox.alert(
                                                {
                                                    size: 'small',
                                                    title: 'User Managment Sysetem',
                                                    message: 'The selected user deleted sucessfully'
                                                }
                                            );

                                        },
                                        404: function (data) {
                                            //not found
                                            bootbox.alert(
                                                {
                                                    size: 'small',
                                                    title: 'User Managment Sysetem',
                                                    message: 'The requested API could not be found'
                                                }
                                            );
                                        },
                                        400: function (data) {
                                            //Bad request
                                            bootbox.alert(
                                                {
                                                    size: 'small',
                                                    title: 'User Managment Sysetem',
                                                    message: 'Bad Request'
                                                }
                                            );
                                        },
                                        500: function (data) {
                                            bootbox.alert(
                                                {
                                                    size: 'small',
                                                    title: 'User Managment Sysetem',
                                                    message: 'Internal Server Error, Please check server Log.'
                                                }
                                            );
                                        },
                                        412: function (data) {
                                            bootbox.alert(
                                                {
                                                    size: 'small',
                                                    title: 'User Managment Sysetem',
                                                    message: 'Your user is not previliged to use this method.'
                                                }
                                            );
                                        }
                                    }

                                });
                            }
                        });
                });
        });
    </script>
}
