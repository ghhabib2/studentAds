@model Classified.Domain.ViewModels.AccountViewModels.AdminUserRegisterViewModel
@{
    ViewBag.Title = "User Managment System";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="form-panel">

    @if (string.IsNullOrEmpty(Model.Id))
    {

        <h4 class="mb">
            <i class="fa fa-angle-right">
                Register New User
            </i>
        </h4>
    }
    else
    {

        <h4 class="mb">
            <i class="fa fa-angle-right">
                Update User Information
            </i>
        </h4>
    }

    @using (Html.BeginForm("Save", "Admin", FormMethod.Post, new { @class = "form-horizontal style-form", @id = "userInfoForm" }))
    {
        <div class="form-group">
            @Html.LabelFor(m => m.FirstName, new { @class = "col-sm-3 col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            </div>
            <div class="col-sm-12">
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.LastName, new { @class = "col-sm-3 col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            </div>
            <div class="col-sm-12">
                @Html.ValidationMessageFor(m => m.LastName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-sm-3 col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
            <div class="col-sm-12">
                @Html.ValidationMessageFor(m => m.Email)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-sm-3 col-sm-3 control-label" })
            <div class="col-sm-9">
                @(string.IsNullOrEmpty(Model.Id) ? Html.PasswordFor(m => m.Password, new { @class = "form-control" }) : Html.PasswordFor(m => m.Password, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" }))
            </div>
            <div class="col-sm-12">
                @Html.ValidationMessageFor(m => m.Password)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-sm-3 col-sm-3 control-label" })
            <div class="col-sm-9">
                @(string.IsNullOrEmpty(Model.Id) ? Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" }) : Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" }))
            </div>
            <div class="col-sm-12">
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Role, new { @class = "col-sm-3 col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.DropDownListFor(m => m.Role.Name, new SelectList(Model.Roles, "Name", "Name"), "Select user's Role", new { @class = "form-control" })
            </div>
            <div class="col-sm-12">
                @Html.ValidationMessageFor(m => m.Role)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-sm-3 col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Comment, new { @class = "col-sm-3 col-sm-3 control-label" })
            <div class="col-sm-9">
                @Html.TextAreaFor(m => m.Comment, new { @class = "form-control" })
            </div>
        </div>
        <div class="checkbox">
            <label>
                @Html.CheckBox("chk_Confirmation", new { required = "true" })
                @Html.ValidationMessage("chk_Confirmation", "Please check the check box, if you confirm the information provided above!!")
            </label>
        </div>

        @Html.HiddenFor(m => m.Id)
        if(!string.IsNullOrEmpty(Model.Id))
         {
             @Html.HiddenFor(m => m.Password)
         }
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-theme" id="submit" onclick="javascript: return PostSubmit();">Save</button>

    }

</div>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

}

